#!/bin/bash -x
IPTABLES=/usr/sbin/iptables
IPTABLES_DATA=/etc/sysconfig/iptables
LANIF=`cat /etc/sysconfig/xs_lan_device`
WANIF=`cat /etc/sysconfig/xs_wan_device`

clear_fw() {
$IPTABLES -F
$IPTABLES -t nat -F
$IPTABLES -X

# first match wins
# Always accept loopback traffic 
$IPTABLES -A INPUT -i lo -j ACCEPT

# Always drop rpc 
$IPTABLES -A INPUT -p tcp --dport 111 -j DROP
$IPTABLES -A INPUT -p udp --dport 111 -j DROP
# mysql
$IPTABLES -A INPUT -p tcp --dport 3306 -j DROP
$IPTABLES -A INPUT -p udp --dport 3306 -j DROP
# postgre - not needed listens on lo only
$IPTABLES -A INPUT -p tcp --dport 5432 -j DROP
$IPTABLES -A INPUT -p udp --dport 5432 -j DROP
# couchdb
$IPTABLES -A INPUT -p tcp --dport 5984 -j DROP
$IPTABLES -A INPUT -p udp --dport 5984 -j DROP
}

if [  "x$WANIF" == "x" ]; then
    clear_fw
    # save the rule set
    $IPTABLES-save > "$IPTABLES_DATA"
    exit 0
fi
if [  "x$LANIF" == "x" ]; then
    clear_fw
    # save the rule set
    $IPTABLES-save > "$IPTABLES_DATA"
    exit 0
fi

lan=$LANIF
wan=$WANIF

# Good thing we replace this file should be treated like squid below
gw_block_https={{ gw_block_https }}
ssh_port={{ ssh_port }}
gui_wan={{ gui_wan }}
gui_port={{ gui_port }}
xsce_gateway_enabled={{ xsce_gateway_enabled }}
block_DNS={{ block_DNS }}
capture_enabled={{ capture_enabled }}

echo "Lan is $lan and WAN is $wan"
#
# delete all existing rules.
#

/sbin/modprobe ip_tables
/sbin/modprobe iptable_filter
/sbin/modprobe ip_conntrack
/sbin/modprobe iptable_nat
clear_fw

# Capture all http requests to our portal entrance
if [  "$capture_enabled" == "True" ]; then    
    # create a table for processing user web access
    $IPTABLES -N internet -t mangle
    # send all of our traffic there
    $IPTABLES -t mangle -A PREROUTING -j internet
    # read through the subscriptions, delete over expire period
    now=`date +%s`
    while IFS="" read -r line
    do
       timestamp=`echo $line|cut -d" " -f3`
       age=$(( $now - $timestamp ))
       ip=`echo $line|cut -d" " -f1`
       mac=`echo $line|cut -d" " -f2`
       if [ $age -gt 60*60*24 ]; then
          expire $ip $mac
       fi
     done

     # return from internet table if mac is known
     gawk '{ system("$IPTABLES -t mangle -A internet -m mac --mac-source "$2" -j RETURN"); }' /var/lib/users
     # MAC address not found. Mark the packet 99
     $IPTABLES -t mangle -A internet -j MARK --set-mark 99

     # Redirect web requests from Unauthorised users to logon Web Page
     $IPTABLES -t nat -A PREROUTING -m mark --mark 99 -p tcp --dport 80 -j DNAT --to-destination 172.18.96.1
     $IPTABLES -t filter -A FORWARD -m mark --mark 99 -j DROP

 
# work in progress here
fi   

# Allow established connections, and those not coming from the outside
$IPTABLES -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IPTABLES -A INPUT -m state --state NEW -i  $lan -j ACCEPT

# Allow mDNS 
$IPTABLES -A INPUT -p udp --dport 5353 -j ACCEPT

#when run as gateway 
$IPTABLES -A INPUT -p tcp --dport $ssh_port -m state --state NEW -i $wan -j ACCEPT

if [ "$gui_wan" == "True" ]; then
    $IPTABLES -A INPUT -p tcp --dport $gui_port -m state --state NEW -i $wan -j ACCEPT
fi


if [ "$xsce_gateway_enabled" == "True" ]; then
    $IPTABLES -A POSTROUTING -t nat -o $wan -j MASQUERADE
fi

$IPTABLES -A FORWARD -i $wan -o $lan -m state --state ESTABLISHED,RELATED -j ACCEPT

#Block https traffic except if directed at erver
if [  "$gw_block_https" == "True" ]; then    
    $IPTABLES -A FORWARD -p tcp ! -d 172.18.96.1 --dport 443 -j DROP
fi   

# Allow outgoing connections from the LAN side.
$IPTABLES -A FORWARD -i $lan -o $wan -j ACCEPT

# Don't forward from the outside to the inside.
$IPTABLES -A FORWARD -i $wan -o $lan -j DROP
$IPTABLES -A INPUT -i $wan -j DROP

if [ "$block_DNS" == "True" ];then
    $IPTABLES -t nat -A PREROUTING -i $lan -p tcp --dport 53 ! -d {{lan_ip}} -j DNAT --to {{lan_ip}}:53
    $IPTABLES -t nat -A PREROUTING -i $lan -p udp --dport 53 ! -d {{lan_ip}} -j DNAT --to {{lan_ip}}:53
fi

if [ -f /etc/sysconfig/xs_httpcache_on ]; then
    $IPTABLES  -t nat  -A PREROUTING -i $lan -p tcp --dport 80 ! -d 172.18.96.1 -j DNAT --to 172.18.96.1:3128
fi

# Enable routing.
echo 1 > /proc/sys/net/ipv4/ip_forward
# save the whole rule set now
$IPTABLES-save > "$IPTABLES_DATA"
exit 0
